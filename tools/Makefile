# Makefile注释以#符号开头
# 编写规则：
# 	目标对象名称:依赖对象名称
# 	tab[\t]为了生成目标对象所要执行的命令
#	
#	make程序解释makefile文件中规则的流程：
#		1. 先找目标对象(
#			永远只生成第一个对象，第一个对象命令执行完毕就退出了
#		2. 找到目标对象之后，根依赖对象进行时间属性对比
#			判断程序是否是最新的，是否需要重新编译
#		3. 执行为了生成目标对象所要执行的命令
#			这条命令，不一定非要生成目标对象
#		*	make可以直接在外部指定要执行生成的对象
#			make clean
#	伪对象：不管目标对象是不是最新的，都需要重新生成
#		声明伪对象： .PHONY
#定义all对象是因为make只找第一个对象生成，其它对象将不再执行，但是又想要生成多个对象，那么就需要定义第一个对象它的依赖对象是我们想要生成的其它所有对象，
#make为了生成第一个对象，会间接的去生成这些依赖对象

# makefile中的预定义变量
# 预定义变量是用于执行命令中的
# $@:	指的是目标对象
# $^:	指的是所有的依赖对象
# $<:	指的是所有的依赖对象中的第一个依赖对象 
#
# wildcard 关键字，用于获取文件名
# $()用于使用一个变量
# =		:=		?=		+= 这几种变量的赋值方式有声明不同之处
src=$(wildcard ./*.c)
all:main test
main:$(src)
	gcc -g $^ -o $@
test:main.c child.c
	gcc main.c child.c -o test 
#将clean声明为伪对象，就是为了防止外部有跟clean同名的文件，导致出现
#因为文件最新而不重新执行命令的问题
.PHONY:clean
clean:
	rm main
